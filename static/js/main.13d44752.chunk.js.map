{"version":3,"sources":["Weather.jsx","App.jsx","index.js"],"names":["Weather","useState","temp","setWeather","search","setSearch","useEffect","a","url","axios","get","data","status","className","type","placeholder","onChange","e","target","value","style","marginTop","height","width","paddingLeft","fontSize","weather","name","sys","country","main","toFixed","feels_like","temp_max","temp_min","description","src","icon","alt","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOA0FeA,EApFC,WACd,IACI,EAAqBC,mBAAS,IAAlC,mBAAKC,EAAL,KAAWC,EAAX,KACI,EAAsBF,mBAAS,aAAnC,mBAAKG,EAAL,KAAaC,EAAb,KAmBA,OAlBAC,oBAAS,sBAAC,8BAAAC,EAAA,sEAEFC,EAFE,4DAEyDJ,EAFzD,kBAHM,oCAGN,SAGWK,IAAMC,IAAIF,GAHrB,UAIc,OADhBG,EAHE,QAIGC,OAJH,qBAKE,YALF,UAOc,MAAhBD,EAAKC,OAPH,kCAQET,GAAW,WAEf,OAAOQ,EAAKA,QAVV,oHAgBP,CAACP,IAGF,qCACE,oBAAIS,UAAW,OAAf,qBACA,uBACEC,KAAK,OACLC,YAAY,aACZC,SAAQ,uCAAE,WAAOC,GAAP,SAAAV,EAAA,sEACFF,EAAUY,EAAEC,OAAOC,OADjB,2CAAF,sDAGRA,MAAOf,EACPgB,MAAO,CACLC,UAAW,OACXC,OAAQ,OACRC,MAAO,OACPC,YAAa,OACbC,SAAU,YAGbvB,EAAKwB,QACJ,mCACE,qBAAKb,UAAU,OAAf,SACE,sBAAKA,UAAU,MAAf,UACE,uCAAQX,EAAKyB,KAAb,YAAqBzB,EAAK0B,IAAIC,WAC9B,oBAAGhB,UAAU,YAAb,0CAC4BX,EAAK4B,KAAK5B,KAAO,QAAQ6B,QAAQ,IAC3D,4CAEF,oBAAGlB,UAAU,YAAb,iCACmBX,EAAK4B,KAAKE,WAAa,QAAQD,QAAQ,IACxD,4CAEF,oBAAGlB,UAAU,YAAb,UACE,iDACYX,EAAK4B,KAAKG,SAAW,QAAQF,QAAQ,IAAM,OAEvD,yCAJF,oBAKY7B,EAAK4B,KAAKI,SAAW,QAAQH,QAAQ,IAC/C,4CAEF,sBAAKlB,UAAU,WAAf,UACE,sBAAKA,UAAU,QAAf,UACE,mBAAGA,UAAU,OAAb,mBAAwBX,EAAKwB,QAAQ,GAAGI,QACxC,4BAAI5B,EAAKwB,QAAQ,GAAGS,iBAEtB,qBAAKtB,UAAU,QAAf,SACE,qBACEuB,IAAG,0CAAqClC,EAAKwB,QAAQ,GAAGW,KAArD,QACHC,IAAI,gBACJlB,MAAO,CACLE,OAAQ,sBAQpB,SC3EKiB,EARH,WACV,OACE,mCACE,cAAC,EAAD,OCANC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.13d44752.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"../node_modules/bootstrap/dist/js/bootstrap.bundle\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.css\";\nimport \"./index.css\";\n\nconst Weather = () => {\n  const API_KEY = \"4866f54586dd3e47a2e78c113d8d6a3c\";\n  var [temp, setWeather] = useState({});\n  var [search, setSearch] = useState(\"Ahmedabad\");\n  useEffect(async () => {\n    try {\n      var url = `https://api.openweathermap.org/data/2.5/weather?q=${search}&appid=${API_KEY}`;\n      var data = await axios.get(url);\n      if (data.status === 404) {\n        throw \"404 Error\";\n      }\n      if (data.status === 200) {\n        await setWeather(() => {\n          //console.log(data.data);\n          return data.data;\n        });\n      }\n    } catch (err) {\n      //console.log(err)\n    }\n  }, [search]);\n\n  return (\n    <>\n      <h1 className={\"mt-5\"}>Weather</h1>\n      <input\n        type=\"text\"\n        placeholder=\"Enter City\"\n        onChange={async (e) => {\n          await setSearch(e.target.value);\n        }}\n        value={search}\n        style={{\n          marginTop: \"2rem\",\n          height: \"10vh\",\n          width: \"25vw\",\n          paddingLeft: \"10px\",\n          fontSize: \"1.5rem\",\n        }}\n      />\n      {temp.weather ? (\n        <>\n          <div className=\"card\">\n            <div className=\"m-4\">\n              <h3>{`${temp.name},${temp.sys.country}`}</h3>\n              <p className=\"mt-1 font\">\n                {`Current Temperature: ${(temp.main.temp - 273.15).toFixed(2)}`}\n                <span>&deg;C</span>\n              </p>\n              <p className=\"mt-1 font\">\n                {`Feels Like: ${(temp.main.feels_like - 273.15).toFixed(2)}`}\n                <span>&deg;C</span>\n              </p>\n              <p className=\"mt-1 font\">\n                <span>\n                  {`Max: ${(temp.main.temp_max - 273.15).toFixed(2)}`}{\" \"}\n                </span>\n                <span>&deg;C</span>,\n                {`Min: ${(temp.main.temp_min - 273.15).toFixed(2)}`}\n                <span>&deg;C</span>\n              </p>\n              <div className=\"row mt-2\">\n                <div className=\"col-7\">\n                  <p className=\"font\">{`${temp.weather[0].main}`}</p>\n                  <p>{temp.weather[0].description}</p>\n                </div>\n                <div className=\"col-5\">\n                  <img\n                    src={`http://openweathermap.org/img/w/${temp.weather[0].icon}.png`}\n                    alt=\"Weather Image\"\n                    style={{\n                      height: \"70px\",\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </>\n      ) : null}\n    </>\n  );\n};\n\nexport default Weather;\n","import React from \"react\";\nimport Weather from \"./Weather\";\nconst App = () => {\n  return (\n    <>\n      <Weather />\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'\nimport App from './App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}